version: "3.3"

services:
  insertions_service:
    build: ./insertions_service
    image: insertions_service:v1.0.0
    container_name: insertions_service
    command: sh -c "python3 wait-for-service.py -d -n efarmers -u efarmers -p password db 5432 && python3 wait-for-service.py user_service 8080 && python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - DATABASE_HOSTNAME=${DATABASE_HOSTNAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - insertions-media:/usr/src/app/media/images
    ports:
      - "8000:8000"
    depends_on:
      - db

  user_service:
    build: ./user_service
    image: user_service:v1.0.0
    container_name: user_service
    command: sh -c "python3 wait-for-service.py -d -n efarmers -u efarmers -p password db 5432 && python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8080"
    environment:
      - DATABASE_HOSTNAME=${DATABASE_HOSTNAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - db

  db:
    image: library/postgres
    container_name: db
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
      - postgres-data:/var/lib/postgresql/data
    
volumes:
  postgres-data:
    driver: local
  insertions-media:
    driver: local
