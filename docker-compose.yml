version: "3.3"

services:
  frontend:
    build:
      context: ./frontend
    image: efarmers_frontend:v1.0
    container_name: frontend
    command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - insertions_service
      - user_service
    environment:
      - REACT_APP_API_USERS=${REACT_APP_API_USERS}
      - REACT_APP_API_INSERTIONS=${REACT_APP_API_INSERTIONS}

  insertions_service:
    build:
      context: .
      dockerfile: ./insertions_service/Dockerfile
    image: insertions_service:v1.0
    container_name: insertions_service
    command: sh -c "
      python3 wait-for-service.py user_service 8080 &&
      python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      python3 manage.py runserver 0.0.0.0:8081 "

    environment:
      - DATABASE_HOSTNAME=${DATABASE_HOSTNAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - insertions-media:/usr/src/app/media/images
    ports:
      - "8081:8081"
    depends_on:
      - db
      - user_service

  user_service:
    build:
      context: .
      dockerfile: ./user_service/Dockerfile
    image: user_service:v1.0
    container_name: user_service
    command: sh -c "
      python3 wait-for-service.py -d -n $${DATABASE_NAME} -u $${DATABASE_USER} -p password $${DATABASE_HOSTNAME} $${DATABASE_PORT} && 
      python3 manage.py makemigrations && 
      python3 manage.py migrate && 
      python3 manage.py runserver 0.0.0.0:8080 "

    environment:
      - DATABASE_HOSTNAME=${DATABASE_HOSTNAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - db

  db:
    image: library/postgres
    container_name: db
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
    driver: local
  insertions-media:
    driver: local
